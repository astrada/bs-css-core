// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Css  = require("../src/Css.js");
var Jest = require("bs-jest/lib/js/src/jest.js");

describe("style", (function () {
        var styles = function (theme) {
          var card = function () {
            return Css.style(/* :: */[
                        Css.backgroundColor(Css.white),
                        /* :: */[
                          Css.boxShadow(Css.shadow(/* None */0, /* Some */[3], /* Some */[5], /* None */0, Css.rgba(0, 0, 0, 0.3))),
                          /* :: */[
                            Css.padding(theme.basePadding),
                            /* [] */0
                          ]
                        ]
                      ]);
          };
          var title = function () {
            return Css.style(/* :: */[
                        Css.fontSize(Css.rem(1.5)),
                        /* :: */[
                          Css.color(theme.textColor),
                          /* :: */[
                            Css.marginBottom(theme.basePadding),
                            /* [] */0
                          ]
                        ]
                      ]);
          };
          return {
                  card: card(/* () */0),
                  title: title(/* () */0)
                };
        };
        var theme = {
          textColor: Css.hex("333"),
          basePadding: Css.px(15)
        };
        return Jest.test("stylesWithTheme", (function () {
                      return Jest.Expect[/* toEqual */12]({
                                    card: {
                                      backgroundColor: "white",
                                      boxShadow: "0px 3px 5px 0px rgba(0, 0, 0, 0.3)",
                                      padding: "15px"
                                    },
                                    title: {
                                      color: "#333",
                                      fontSize: "1.5rem",
                                      marginBottom: "15px"
                                    }
                                  })(Jest.Expect[/* expect */0](styles(theme)));
                    }));
      }));

describe("keyframes", (function () {
        var bounce = Css.keyframes(/* :: */[
              /* tuple */[
                "0%",
                /* :: */[
                  Css.transform(Css.scale(0.1, 0.1)),
                  /* :: */[
                    Css.opacity(0.0),
                    /* [] */0
                  ]
                ]
              ],
              /* :: */[
                /* tuple */[
                  "60%",
                  /* :: */[
                    Css.transform(Css.scale(1.2, 1.2)),
                    /* :: */[
                      Css.opacity(1.0),
                      /* [] */0
                    ]
                  ]
                ],
                /* :: */[
                  /* tuple */[
                    "100%",
                    /* :: */[
                      Css.transform(Css.scale(1.0, 1.0)),
                      /* :: */[
                        Css.opacity(1.0),
                        /* [] */0
                      ]
                    ]
                  ],
                  /* [] */0
                ]
              ]
            ]);
        var stylesWithAnimation = function () {
          return Css.style(/* :: */[
                      Css.animationName(bounce),
                      /* :: */[
                        Css.animationDuration(2000),
                        /* :: */[
                          Css.width(Css.px(50)),
                          /* :: */[
                            Css.height(Css.px(50)),
                            /* :: */[
                              Css.backgroundColor(Css.rgb(255, 0, 0)),
                              /* [] */0
                            ]
                          ]
                        ]
                      ]
                    ]);
        };
        return Jest.test("stylesWithAnimation", (function () {
                      return Jest.Expect[/* toEqual */12]({
                                    animationDuration: "2000ms",
                                    animationName: {
                                      "0%": {
                                        opacity: "0",
                                        transform: "scale(0.1, 0.1)"
                                      },
                                      "100%": {
                                        opacity: "1",
                                        transform: "scale(1, 1)"
                                      },
                                      "60%": {
                                        opacity: "1",
                                        transform: "scale(1.2, 1.2)"
                                      }
                                    },
                                    backgroundColor: "rgb(255, 0, 0)",
                                    height: "50px",
                                    width: "50px"
                                  })(Jest.Expect[/* expect */0](stylesWithAnimation(/* () */0)));
                    }));
      }));

/*  Not a pure module */
